import inspect
from rich.console import Console
console = Console(stderr=True)

class EngineMessage:
    LEVEL_STYLES = {
        "error": ("‚ùå", "bold red"),
        "warning": ("‚ö†Ô∏è", "bold yellow"),
        "info": ("‚ÑπÔ∏è", "bold cyan"),
        "debug": ("üõ†Ô∏è", "bold magenta"),
        "critical": ("üö®", "bold red on white"),
        "hot": ("üî•", "bold red"),
        "success": ("‚úÖ", "bold green"),
    }

    @classmethod
    def show(cls, message: str, level: str = "error", caller_info: str = ""):
        emoji, style = cls.LEVEL_STYLES.get(level, ("‚ùå", "bold red"))
        caller_text = f" (called from {caller_info})" if caller_info else ""
        console.print(f"\n\n{emoji} [{style}]{level.upper()}:[/{style}] {message}{caller_text}", highlight=False)


class EngineError(Exception):
    def __init__(self, message: str, verbose=True):
        # Obtener informaci√≥n del archivo y l√≠nea que llam√≥ a EngineError
        stack = inspect.stack()
        # stack[1] es la funci√≥n que llam√≥ a EngineError
        caller_frame = stack[1]
        caller_info = f"{caller_frame.filename}:{caller_frame.lineno} in {caller_frame.function}"
        super().__init__(message)
        EngineMessage.show(message, level="error", caller_info=caller_info if verbose else "")
